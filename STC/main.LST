C51 COMPILER V9.52.0.0   MAIN                                                              05/14/2016 22:16:46 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <STC12C5A60S2.H>
   2          #include "common.h"
   3          #include "1602.h"
   4          #include "uart.h"
   5          #include "DHT11.h"
   6          #define BEER P10
   7          
   8          #define uchar unsigned char
   9          #define uint unsigned int
  10          #define MOTOR P14
  11          #define LED1 P27
  12          #define LED2 P26
  13          #define BUTTON1 P25
  14          #define BUTTON2 P24
  15          #define BUTTON3 P23
  16          #define BUTTON4 P22
  17          
  18          uchar soundflag=0;
  19          
  20          void Delay20ms()    //@11.0592MHz
  21          {
  22   1        unsigned char i, j, k;
  23   1      
  24   1        _nop_();
  25   1        _nop_();
  26   1        i = 1;
  27   1        j = 216;
  28   1        k = 35;
  29   1        do
  30   1        {
  31   2          do
  32   2          {
  33   3            while (--k);
  34   3          } while (--j);
  35   2        } while (--i);
  36   1      }
  37          
  38          void Delay500ms()   //@11.0592MHz
  39          {
  40   1        unsigned char i, j, k;
  41   1      
  42   1        i = 22;
  43   1        j = 3;
  44   1        k = 227;
  45   1        do
  46   1        {
  47   2          do
  48   2          {
  49   3            while (--k);
  50   3          } while (--j);
  51   2        } while (--i);
  52   1      }
  53          
  54          void InitLCD ()
  55          {
C51 COMPILER V9.52.0.0   MAIN                                                              05/14/2016 22:16:46 PAGE 2   

  56   1        InitLCM();
  57   1        DisplayListChar(0,0," TUST_SAC BY:GFD");
  58   1        DisplayListChar(0,1,"Connecting...");
  59   1      }
  60          
  61          void Init_online()
  62          {
  63   1        getflag=1;
  64   1        while(getflag){
  65   2          Uart_One_Send('A');
  66   2          Delay500ms();
  67   2          if(getflag==0)
  68   2            break;
  69   2        }
  70   1      
  71   1      }
  72          
  73          int speedtrans(int x)
  74          {
  75   1        if (x==1)
  76   1          return 13;
  77   1        else if (x==2)
  78   1          return 12;
  79   1        else if (x==3)
  80   1          return 11;
  81   1        else if (x==4)
  82   1          return 10;
  83   1        else if (x==5)
  84   1          return 9;
  85   1        else if (x==6)
  86   1          return 8;
  87   1        else if (x==7)
  88   1          return 7;
  89   1        else if (x==8)
  90   1          return 6;
  91   1        else if (x==9)
  92   1          return 5;
  93   1        else if (x==10)
  94   1          return 4;
  95   1        else
  96   1          return 3;
  97   1      }
  98          
  99          void Senddata()
 100          {
 101   1        Uart_One_Printf("N:");
 102   1        Uart_One_Send((int)MOTOR+0x30);
 103   1        Uart_One_Send(':');
 104   1        Uart_One_Send((int)MAN_MOTOR+0x30);
 105   1        Uart_One_Send(':');
 106   1        Uart_One_Send(speedtrans(MOTOR_SPEED)/10+0x30);
 107   1        Uart_One_Send(speedtrans(MOTOR_SPEED)%10+0x30);
 108   1        Uart_One_Send(':');
 109   1        Uart_One_Send(U8T_data_H/10+0x30);
 110   1        Uart_One_Send(U8T_data_H%10+0x30);
 111   1        Uart_One_Send(':');
 112   1        Uart_One_Send(U8RH_data_H/10+0x30);
 113   1        Uart_One_Send(U8RH_data_H%10+0x30);
 114   1        Uart_One_Send(':');
 115   1        Uart_One_Send((int)PM/100%10+0x30);
 116   1        Uart_One_Send((int)PM/10%10+0x30);
 117   1        Uart_One_Send((int)PM%10+0x30);
C51 COMPILER V9.52.0.0   MAIN                                                              05/14/2016 22:16:46 PAGE 3   

 118   1      }
 119          
 120          void buttoncheck()
 121          {
 122   1        if(BUTTON1==1){
 123   2          Delay20ms();
 124   2          if (BUTTON1==1)
 125   2          {
 126   3            if(MOTOR_SPEED>3)
 127   3              MOTOR_SPEED-=1;
 128   3            while(BUTTON1==0);
 129   3          }
 130   2        }
 131   1        if(BUTTON2==1){
 132   2          Delay20ms();
 133   2          if (BUTTON2==1)
 134   2          {
 135   3            if(MOTOR_SPEED<15)
 136   3              MOTOR_SPEED+=1;
 137   3            while(BUTTON2==0);
 138   3          }
 139   2        }
 140   1        if(BUTTON3==1){
 141   2          Delay20ms();
 142   2          if (BUTTON3==1)
 143   2          {
 144   3            MOTOR=!MOTOR;
 145   3            while(BUTTON3==0);
 146   3          }
 147   2        }
 148   1        if(BUTTON4==1){
 149   2          Delay20ms();
 150   2          if (BUTTON4==1)
 151   2          {
 152   3            MAN_MOTOR=!MAN_MOTOR;
 153   3            while(BUTTON4==0);
 154   3          }
 155   2        }
 156   1      
 157   1      }
 158          
 159          void main()
 160          {
 161   1        unsigned int i=0 ;
 162   1        InitLCD();
 163   1        LED1=1;
 164   1        LED2=1;
 165   1        BUTTON1=0;
 166   1        BUTTON2=0;
 167   1        BUTTON3=0;
 168   1        BUTTON4=0;
 169   1        MOTOR=0;
 170   1        CCON=0;          //PCA初始化
 171   1        CL=0;       //PCA的16位计数器低八位
 172   1        CH=0;       //PCA的16位计数器高八位
 173   1        CMOD=0x00; //选择 系统时钟/12 为计数脉冲,则PWM的频率f=sysclk/256/12;
 174   1        CCAP0H=0xA0;  //  占空比控制
 175   1        CCAP0L=0xA0;
 176   1        PCA_PWM0=0x00; //控制占空比的第九位为0
 177   1        CCAPM0=0x42;  //允许P13作为PWM输出
 178   1        CR=1;     //启动PCA计数器
 179   1        Uart_Two_Init();
C51 COMPILER V9.52.0.0   MAIN                                                              05/14/2016 22:16:46 PAGE 4   

 180   1        Uart_One_Init();
 181   1        Init_online();
 182   1        BEER=1;
 183   1        DisplayListChar(0,0," 00:00:00 R 00 N");
 184   1        DisplayListChar(0,1,"T=00 H=00 A=000");
 185   1        LED2=0;
 186   1        while(1){
 187   2          buttoncheck();
 188   2          if(MOTOR_SPEED>15)
 189   2            MOTOR_SPEED=3;
 190   2          else if(MOTOR_SPEED<3)
 191   2            MOTOR_SPEED=15;
 192   2          for(i=0;i<8;i++)
 193   2            DisplayOneChar(i+1,0,time[i]);
 194   2          if(MOTOR)
 195   2            DisplayOneChar(10,0,'R');
 196   2          else
 197   2            DisplayOneChar(10,0,'S');
 198   2          CCAP0H=MOTOR_SPEED*16;
 199   2          CCAP0L=MOTOR_SPEED*16;
 200   2          DisplayOneChar(12,0,speedtrans(MOTOR_SPEED)/10+0x30);
 201   2          DisplayOneChar(13,0,speedtrans(MOTOR_SPEED)%10+0x30);
 202   2          RH();
 203   2          DisplayOneChar(2,1,U8T_data_H/10+0x30);
 204   2          DisplayOneChar(3,1,U8T_data_H%10+0x30);
 205   2          DisplayOneChar(7,1,U8RH_data_H/10+0x30);
 206   2          DisplayOneChar(8,1,U8RH_data_H%10+0x30);
 207   2          DisplayOneChar(12,1,(int)PM/100%10+0x30);
 208   2          DisplayOneChar(13,1,(int)PM/10%10+0x30);
 209   2          DisplayOneChar(14,1,(int)PM%10+0x30);
 210   2          if(!MAN_MOTOR){
 211   3            if(PM>100.0){
 212   4              MOTOR=1;
 213   4              MOTOR_SPEED=(PM/10)<15?speedtrans((int)(PM/10)):3;
 214   4              LED1=0;
 215   4              if(soundflag==0)
 216   4                sound(800);
 217   4              soundflag=1;
 218   4            }else if(PM<80.0){
 219   4              MOTOR=0;
 220   4              MOTOR_SPEED=10;
 221   4              LED1=1;
 222   4              soundflag=0;
 223   4            }else{
 224   4              LED1=1;
 225   4              soundflag=0;
 226   4            }
 227   3            DisplayOneChar(15,0,'N');
 228   3          }else{
 229   3            DisplayOneChar(15,0,'M');
 230   3          }
 231   2          Senddata();
 232   2        }
 233   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1031    ----
   CONSTANT SIZE    =     67    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       2
C51 COMPILER V9.52.0.0   MAIN                                                              05/14/2016 22:16:46 PAGE 5   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
